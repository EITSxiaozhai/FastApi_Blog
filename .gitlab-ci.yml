variables:
  HARBOR_URL: sggc.exploit-db.xyz:10000
  HARBOR_PROJECT: fastapi_blog
  IMAGE_NAME: $HARBOR_URL/$HARBOR_PROJECT/fastapi
  DOCKER_BUILDKIT: 1  # 启用 BuildKit 以支持更多优化特性

stages:
  - build
  - deploy

Fastapi_image_build:
  stage: build
  script:
    - echo "FastApi build, Dockerfile:"
    - export Sql_URL="mysql://$DB_USERNAME:$DB_PASSWORD@$DB_HOSTNAME:$DB_PORT/$DB_NAME?charset=utf8mb4"
    - cat Dockerfile
    - echo $Sql_URL

    # 登录到 Harbor
    - echo $HARBOR_PASSWORD | docker login $HARBOR_URL -u $HARBOR_USERNAME --password-stdin

    # 拉取最新的基础镜像以更新缓存
    - docker pull $IMAGE_NAME:latest || true

    # 构建并打 tag 镜像（添加优化参数）
    - docker build 
      --build-arg BUILDKIT_INLINE_CACHE=1 
      --cache-from $IMAGE_NAME:latest 
      --build-arg Sql_URL=${Sql_URL} 
      -t $IMAGE_NAME:$CI_PIPELINE_ID .
    - docker tag $IMAGE_NAME:$CI_PIPELINE_ID $IMAGE_NAME:latest

    # 推送到 Harbor
    - docker push $IMAGE_NAME:$CI_PIPELINE_ID
    - docker push $IMAGE_NAME:latest

    - docker logout $HARBOR_URL

Fastapi_swarm_deploy:
  stage: deploy
  script:
    - echo "Deploying to Docker Swarm..."
    - export Sql_URL="mysql://$DB_USERNAME:$DB_PASSWORD@$DB_HOSTNAME:$DB_PORT/$DB_NAME?charset=utf8mb4"
    - docker stack deploy --with-registry-auth -c docker-compose.yml fastapi-stack
    - echo "Waiting for database migration to complete..."
    - sleep 30
    - docker service ls
    - docker service logs fastapi-stack_db-migration