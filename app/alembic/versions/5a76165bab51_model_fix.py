"""model fix

Revision ID: 5a76165bab51
Revises: fb08fd5e50f1
Create Date: 2025-03-20 11:08:30.317650

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '5a76165bab51'
down_revision = 'fb08fd5e50f1'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('Admintable_ibfk_1', 'Admintable', type_='foreignkey')
    op.create_foreign_key(None, 'Admintable', 'AdminPrivileges', ['userPrivileges'], ['NameId'])
    op.drop_constraint('ReptileInclusion_ibfk_1', 'ReptileInclusion', type_='foreignkey')
    op.create_foreign_key(None, 'ReptileInclusion', 'blogtable', ['blog_id'], ['BlogId'])
    op.alter_column('blog_ratings', 'blog_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('blog_ratings', 'rating',
               existing_type=mysql.FLOAT(),
               nullable=False)
    op.drop_constraint('blog_ratings_ibfk_1', 'blog_ratings', type_='foreignkey')
    op.create_foreign_key(None, 'blog_ratings', 'blogtable', ['blog_id'], ['BlogId'])
    op.alter_column('blogtable', 'title',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_bin', length=255),
               nullable=False)
    op.alter_column('blogtable', 'content',
               existing_type=sa.BLOB(),
               nullable=False)
    op.alter_column('blogtable', 'BlogIntroductionPicture',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_bin', length=255),
               nullable=False)
    op.alter_column('blogtable', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('blogtable', 'NumberLikes',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('blogtable', 'NumberViews',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('blogtable', 'author',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_bin', length=255),
               nullable=False)
    op.alter_column('blogtable', 'admin_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('blogtable', 'PublishStatus',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
    op.drop_constraint('blogtable_ibfk_1', 'blogtable', type_='foreignkey')
    op.create_foreign_key(None, 'blogtable', 'Admintable', ['admin_id'], ['UserId'])
    op.drop_constraint('blogtag_ibfk_1', 'blogtag', type_='foreignkey')
    op.create_foreign_key(None, 'blogtag', 'blogtable', ['blog_id'], ['BlogId'])
    op.alter_column('comments', 'blog_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_constraint('comments_ibfk_4', 'comments', type_='foreignkey')
    op.drop_constraint('comments_ibfk_2', 'comments', type_='foreignkey')
    op.drop_constraint('comments_ibfk_3', 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'usertable', ['uid'], ['UserId'])
    op.create_foreign_key(None, 'comments', 'comments', ['parentId'], ['id'])
    op.create_foreign_key(None, 'comments', 'blogtable', ['blog_id'], ['BlogId'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key('comments_ibfk_3', 'comments', 'blogtable', ['blog_id'], ['BlogId'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key('comments_ibfk_2', 'comments', 'usertable', ['uid'], ['UserId'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.create_foreign_key('comments_ibfk_4', 'comments', 'comments', ['parentId'], ['id'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.alter_column('comments', 'blog_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'blogtag', type_='foreignkey')
    op.create_foreign_key('blogtag_ibfk_1', 'blogtag', 'blogtable', ['blog_id'], ['BlogId'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'blogtable', type_='foreignkey')
    op.create_foreign_key('blogtable_ibfk_1', 'blogtable', 'Admintable', ['admin_id'], ['UserId'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.alter_column('blogtable', 'PublishStatus',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
    op.alter_column('blogtable', 'admin_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('blogtable', 'author',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_bin', length=255),
               nullable=True)
    op.alter_column('blogtable', 'NumberViews',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('blogtable', 'NumberLikes',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('blogtable', 'created_at',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('blogtable', 'BlogIntroductionPicture',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_bin', length=255),
               nullable=True)
    op.alter_column('blogtable', 'content',
               existing_type=sa.BLOB(),
               nullable=True)
    op.alter_column('blogtable', 'title',
               existing_type=mysql.VARCHAR(charset='utf8mb4', collation='utf8mb4_bin', length=255),
               nullable=True)
    op.drop_constraint(None, 'blog_ratings', type_='foreignkey')
    op.create_foreign_key('blog_ratings_ibfk_1', 'blog_ratings', 'blogtable', ['blog_id'], ['BlogId'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.alter_column('blog_ratings', 'rating',
               existing_type=mysql.FLOAT(),
               nullable=True)
    op.alter_column('blog_ratings', 'blog_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'ReptileInclusion', type_='foreignkey')
    op.create_foreign_key('ReptileInclusion_ibfk_1', 'ReptileInclusion', 'blogtable', ['blog_id'], ['BlogId'], onupdate='RESTRICT', ondelete='RESTRICT')
    op.drop_constraint(None, 'Admintable', type_='foreignkey')
    op.create_foreign_key('Admintable_ibfk_1', 'Admintable', 'AdminPrivileges', ['userPrivileges'], ['NameId'], onupdate='RESTRICT', ondelete='RESTRICT')
    # ### end Alembic commands ###
